package ren.junsong.util;

public class Region4{
	 public double p4_T(double T)
     {

        
         
         double teta, a, b, c;

         
         teta = T - 0.23855557567849 / (T - 650.17534844798);

         a = Math.pow(teta, 2) + 1167.0521452767 * teta - 724213.16703206;
         b = -17.073846940092 * Math.pow(teta, 2) + 12020.82470247 * teta - 3232555.0322333;
         c = 14.91510861353 * Math.pow(teta, 2) - 4823.2657361591 * teta + 405113.40542057;

         return(Math.pow((2 * c / (-b + Math.pow((Math.pow(b, 2) - 4 * a * c), 0.5))), 4));

     
     }
	 
	 public double T4_p(double p)
     {
         
         double beta, e1, f, g, d;

         beta = Math.pow(p, 0.25);

         e1 = Math.pow(beta, 2) - 17.073846940092 * beta + 14.91510861353;
         f = 1167.0521452767 * Math.pow(beta, 2) + 12020.82470247 * beta - 4823.2657361591;
         g = -724213.16703206 * Math.pow(beta, 2) - 3232555.0322333 * beta + 405113.40542057;
         d = 2 * g / (-f - Math.pow((Math.pow(f, 2) - 4 * e1 * g), 0.5));

        return((650.17534844798 + d - Math.pow((Math.pow((650.17534844798 + d), 2) - 4 * (-0.23855557567849 + 650.17534844798 * d)), 0.5)) / 2);
     }
	 
	 public double h4_s(double s)
     {


        
         double eta, sigma, sigma1, sigma2;


         if ((s > -0.0001545495919) & (s <= 3.77828134))
         {
           

             double[] Ii1 = new double[] { 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 7, 8, 12, 12, 14, 14, 16, 20, 20, 22, 24, 28, 32, 32 };
             double[] Ji1 = new double[] { 14, 36, 3, 16, 0, 5, 4, 36, 4, 16, 24, 18, 24, 1, 4, 2, 4, 1, 22, 10, 12, 28, 8, 3, 0, 6, 8 };
             double[] ni1 = new double[] { 0.332171191705237, 6.11217706323496E-04, -8.82092478906822, -0.45562819254325, -2.63483840850452E-05, -22.3949661148062, -4.28398660164013, -0.616679338856916, -14.682303110404, 284.523138727299, -113.398503195444, 1156.71380760859, 395.551267359325, -1.54891257229285, 19.4486637751291, -3.57915139457043, -3.35369414148819, -0.66442679633246, 32332.1885383934, 3317.66744667084, -22350.1257931087, 5739538.75852936, 173.226193407919, -3.63968822121321E-02, 8.34596332878346E-07, 5.03611916682674, 65.5444787064505 };

             sigma = s / 3.8;

             eta = 0;

             for (int i = 0; i <= 26; i++)
             {
                 eta = eta + ni1[i] * Math.pow((sigma - 1.09), Ii1[i]) * Math.pow((sigma + 0.0000366), Ji1[i]);
             }

            return(eta * 1700);

         }

         else if ((s > 3.77828134) & (s <= 4.41202148223476))
         {


             double[] Ii2 = new double[] { 0, 0, 0, 0, 2, 3, 4, 4, 5, 5, 6, 7, 7, 7, 10, 10, 10, 32, 32 };
             double[] Ji2 = new double[] { 1, 4, 10, 16, 1, 36, 3, 16, 20, 36, 4, 2, 28, 32, 14, 32, 36, 0, 6 };
             double[] ni2 = new double[] { 0.822673364673336, 0.181977213534479, -0.011200026031362, -7.46778287048033E-04, -0.179046263257381, 4.24220110836657E-02, -0.341355823438768, -2.09881740853565, -8.22477343323596, -4.99684082076008, 0.191413958471069, 5.81062241093136E-02, -1655.05498701029, 1588.70443421201, -85.0623535172818, -31771.4386511207, -94589.0406632871, -1.3927384708869E-06, 0.63105253224098 };

             sigma = s / 3.8;

             eta = 0;

             for (int i = 0; i <= 18; i++)
             {

                 eta = eta + ni2[i] * Math.pow((sigma - 1.09), Ii2[i]) * Math.pow((sigma + 0.0000366), Ji2[i]);

             }

             return(eta * 1700);

         }

         else if ((s > 4.41202148223476) & (s <= 5.85))
         {

            

             double[] Ii3 = new double[] { 0, 0, 0, 1, 1, 5, 6, 7, 8, 8, 12, 16, 22, 22, 24, 36 };
             double[] Ji3 = new double[] { 0, 3, 4, 0, 12, 36, 12, 16, 2, 20, 32, 36, 2, 32, 7, 20 };
             double[] ni3 = new double[] { 1.04351280732769, -2.27807912708513, 1.80535256723202, 0.420440834792042, -105721.24483466, 4.36911607493884E+24, -328032702839.753, -6.7868676080427E+15, 7439.57464645363, -3.56896445355761E+19, 1.67590585186801E+31, -3.55028625419105E+37, 396611982166.538, -4.14716268484468E+40, 3.59080103867382E+18, -1.16994334851995E+40 };

             sigma = s / 5.9;

             eta = 0;

             for (int i = 0; i <= 15; i++)
             {
                 eta = eta + ni3[i] * Math.pow((sigma - 1.02), Ii3[i]) * Math.pow((sigma - 0.726), Ji3[i]);
             }

             return(Math.pow(eta, 4) * 2800);

         }

         else if ((s > 5.85) & (s < 9.155759395))
         {
             

             double[] Ii4 = new double[] { 1, 1, 2, 2, 4, 4, 7, 8, 8, 10, 12, 12, 18, 20, 24, 28, 28, 28, 28, 28, 32, 32, 32, 32, 32, 36, 36, 36, 36, 36 };
             double[] Ji4 = new double[] { 8, 24, 4, 32, 1, 2, 7, 5, 12, 1, 0, 7, 10, 12, 32, 8, 12, 20, 22, 24, 2, 7, 12, 14, 24, 10, 12, 20, 22, 28 };
             double[] ni4 = new double[] { -524.581170928788, -9269472.18142218, -237.385107491666, 21077015581.2776, -23.9494562010986, 221.802480294197, -5104725.33393438, 1249813.96109147, 2000084369.96201, -815.158509791035, -157.612685637523, -11420042233.2791, 6.62364680776872E+15, -2.27622818296144E+18, -1.71048081348406E+31, 6.60788766938091E+15, 1.66320055886021E+22, -2.18003784381501E+29, -7.87276140295618E+29, 1.51062329700346E+31, 7957321.70300541, 1.31957647355347E+15, -3.2509706829914E+23, -4.18600611419248E+25, 2.97478906557467E+34, -9.53588761745473E+19, 1.66957699620939E+24, -1.75407764869978E+32, 3.47581490626396E+34, -7.10971318427851E+38 };

             sigma1 = s / 5.21;

             sigma2 = s / 9.2;

             eta = 0;

             for (int i = 0; i <= 29; i++)
             {

                 eta = eta + ni4[i] * Math.pow((1 / sigma1 - 0.513), Ii4[i]) * Math.pow((sigma2 - 0.524), Ji4[i]);

             }

             return(Math.exp(eta) * 2800);
         }

         else
         {
             return (0);
            

         }

     }

}
